// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
/* Copyright (c) 2023, Chukun Pan <amadeus@jmu.edu.cn> */

/dts-v1/;

#include "ipq8074.dtsi"
#include "ipq8074-hk-cpu.dtsi"
#include "ipq8074-ess.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/leds/common.h>

/ {
	model = "openmptcprouter 5GX4";
	compatible = "aliyun,xglink5g", "qcom,ipq8074";

	aliases {
		serial0 = &blsp1_uart5;
		serial1 = &blsp1_uart3;
		serial2 = &blsp1_uart6;
		sdhc1 = &sdhc_1;
		/*
		 * Aliases as required by u-boot
		 * to patch MAC addresses
		 */

		ethernet0 = &dp3;
		ethernet1 = &dp4;
		ethernet2 = &dp5;
		label-mac-device = &dp3;
	};

	chosen {
		stdout-path = "serial0:115200n8";
		bootargs-append = " root=/dev/ubiblock0_1";
	};

	keys {
		compatible = "gpio-keys";
		pinctrl-0 = <&button_pins>;
		pinctrl-names = "default";

		reset {
			label = "reset";
			linux,code = <KEY_RESTART>;
			gpios = <&tlmm 27 GPIO_ACTIVE_LOW>;
		};
	};

	gpio-export {
		compatible = "gpio-export";

		module_5g1_power {
			gpio-export,name = "module_5g1_power";
			gpio-export,output = <1>;
			gpios = <&tlmm 25 GPIO_ACTIVE_HIGH>;
		};

		module_5g2_power {
			gpio-export,name = "module_5g2_power";
			gpio-export,output = <1>;
			gpios = <&tlmm 30 GPIO_ACTIVE_HIGH>;
		};

		module_4g1_power {
			gpio-export,name = "module_4g1_power";
			gpio-export,output = <1>;
			gpios = <&tlmm 32 GPIO_ACTIVE_HIGH>;
		};

		module_4g2_power {
			gpio-export,name = "module_4g2_power";
			gpio-export,output = <1>;
			gpios = <&tlmm 34 GPIO_ACTIVE_HIGH>;
		};

		module_5g1_reset {
			gpio-export,name = "module_5g1_reset";
			gpio-export,output = <1>;
			gpios = <&tlmm 26 GPIO_ACTIVE_HIGH>;
		};

		module_5g2_reset {
			gpio-export,name = "module_5g2_reset";
			gpio-export,output = <1>;
			gpios = <&tlmm 29 GPIO_ACTIVE_HIGH>;
		};

		module_4g1_reset {
			gpio-export,name = "module_4g1_reset";
			gpio-export,output = <1>;
			gpios = <&tlmm 31 GPIO_ACTIVE_HIGH>;
		};

		module_4g2_reset {
			gpio-export,name = "module_4g2_reset";
			gpio-export,output = <1>;
			gpios = <&tlmm 33 GPIO_ACTIVE_HIGH>;
		};
	};
};

&tlmm {
	mdio_pins: mdio-pins {
		mdc {
			pins = "gpio68";
			function = "mdc";
			drive-strength = <8>;
			bias-pull-up;
		};

		mdio {
			pins = "gpio69";
			function = "mdio";
			drive-strength = <8>;
			bias-pull-up;
		};
	};

	button_pins: button_pins {
		reset {
			pins = "gpio27";
			function = "gpio";
			drive-strength = <8>;
			bias-pull-up;
		};
	};
	
	spi_3_pins: spi_3_pins {
		mux {
			pins = "gpio50", "gpio51", "gpio52", "gpio53";
			function = "blsp3_spi";
			drive-strength = <8>;
			bias-disable;
		};

		dc {
			pins = "gpio42";
			function = "gpio";
			drive-strength = <8>;
			bias-pull-up;
		};

		reset {
			pins = "gpio43";
			function = "gpio";
			drive-strength = <8>;
			bias-pull-up;
		};
	};

	hsuart_232_pins: hsuart-232-state {
		pins = "gpio48", "gpio49";
		function = "blsp2_uart";
		drive-strength = <8>;
		bias-disable;
	};

	hsuart_485_pins: hsuart-485-state {
		pins = "gpio9", "gpio16";
		function = "blsp5_uart";
		drive-strength = <8>;
		bias-disable;
	};

	i2c_0_pins: i2c-0-state {
		pins = "gpio21", "gpio22";
		function = "blsp4_i2c1";
		drive-strength = <8>;
		bias-disable;
	};

	i2c_1_pins: i2c-1-state {
		pins = "gpio46", "gpio47";
		function = "blsp2_i2c";
		drive-strength = <8>;
		bias-disable;
	};
};

&blsp1_uart3 {
	status = "okay";
	pinctrl-0 = <&hsuart_232_pins>;
	pinctrl-names = "default";
};

&blsp1_uart5 {
	status = "okay";
};

&blsp1_uart6 {
	status = "okay";
	pinctrl-0 = <&hsuart_485_pins>;
	pinctrl-names = "default";
};

&blsp1_i2c2 {
	status = "okay";
	pinctrl-0 = <&i2c_0_pins>;
	pinctrl-names = "default";
};

&blsp1_i2c3 {
	status = "okay";
	pinctrl-0 = <&i2c_1_pins>;
	pinctrl-names = "default";
};

&cryptobam {
	status = "okay";
};

&crypto {
	status = "okay";
};

&prng {
	status = "okay";
};

&blsp1_spi1 {
	pinctrl-0 = <&spi_0_pins>;
	pinctrl-names = "default";
	cs-gpios = <0>;
	status = "okay";

	/*
	 * Bootloader will find the NAND DT node by the compatible and
	 * then "fixup" it by adding the partitions from the SMEM table
	 * using the legacy bindings thus making it impossible for us
	 * to change the partition table or utilize NVMEM for calibration.
	 * So add a dummy partitions node that bootloader will populate
	 * and set it as disabled so the kernel ignores it instead of
	 * printing warnings due to the broken way bootloader adds the
	 * partitions.
	 */
	partitions {
		status = "disabled";
	};

	flash@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		reg = <0>;
		compatible = "jedec,spi-nor";
		spi-max-frequency = <50000000>;

		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;

			partition@0 {
				label = "0:sbl1";
				reg = <0x0 0x50000>;
				read-only;
			};

			partition@50000 {
				label = "0:mibib";
				reg = <0x50000 0x10000>;
				read-only;
			};

			partition@60000 {
				label = "0:bootconfig";
				reg = <0x60000 0x20000>;
				read-only;
			};

			partition@80000 {
				label = "0:bootconfig1";
				reg = <0x80000 0x20000>;
				read-only;
			};

			partition@a0000 {
				label = "0:qsee";
				reg = <0xa0000 0x180000>;
				read-only;
			};

			partition@220000 {
				label = "0:qsee_1";
				reg = <0x220000 0x180000>;
				read-only;
			};

			partition@3a0000 {
				label = "0:devcfg";
				reg = <0x3a0000 0x10000>;
				read-only;
			};

			partition@3b0000 {
				label = "0:devcfg_1";
				reg = <0x3b0000 0x10000>;
				read-only;
			};

			partition@3c0000 {
				label = "0:apdp";
				reg = <0x3c0000 0x10000>;
				read-only;
			};

			partition@3d0000 {
				label = "0:apdp_1";
				reg = <0x3d0000 0x10000>;
				read-only;
			};

			partition@3e0000 {
				label = "0:rpm";
				reg = <0x3e0000 0x40000>;
				read-only;
			};

			partition@420000 {
				label = "0:rpm_1";
				reg = <0x420000 0x40000>;
				read-only;
			};

			partition@460000 {
				label = "0:cdt";
				reg = <0x460000 0x10000>;
				read-only;
			};

			partition@470000 {
				label = "0:cdt_1";
				reg = <0x470000 0x10000>;
				read-only;
			};

			partition@480000 {
				label = "0:appsblenv";
				reg = <0x480000 0x10000>;
			};

			partition@490000 {
				label = "0:appsbl_1";
				reg = <0x490000 0x100000>;
			};

			partition@540000 {
				label = "0:appsbl";
				reg = <0x590000 0x100000>;
			};

			partition@610000 {
				label = "0:art";
				reg = <0x690000 0x40000>;	
			};
			partition@630000 {
				label = "0:ethphyfw";
				reg = <0x6d0000 0x80000>;
			};		
		};
	};
};

&qpic_bam {
	status = "okay";
};

&qpic_nand {
	status = "okay";
	
	/*
	 * Bootloader will find the NAND DT node by the compatible and
	 * then "fixup" it by adding the partitions from the SMEM table
	 * using the legacy bindings thus making it impossible for us
	 * to change the partition table or utilize NVMEM for calibration.
	 * So add a dummy partitions node that bootloader will populate
	 * and set it as disabled so the kernel ignores it instead of
	 * printing warnings due to the broken way bootloader adds the
	 * partitions.
	 */
	// partitions {
	// 	status = "disabled";
	// };

	nand@0 {
		reg = <0>;
		nand-ecc-strength = <4>;
		nand-ecc-step-size = <512>;
		nand-bus-width = <8>;

	// 	partitions {
	// 		compatible = "fixed-partitions";
	// 		#address-cells = <1>;
	// 		#size-cells = <1>;

	// 		partition@0 {
	// 			label = "rootfs_1";
	// 			reg = <0x0 0x6400000>;
	// 		};

	// 		partition@6400000 {
	// 			label = "wififw_1";
	// 			reg = <0x6400000 0x800000>;
	// 		};

	// 		partition@6c00000 {
	// 			label = "rootfs";
	// 			reg = <0x6c00000 0x6400000>;
	// 		};
	// 	};
	};
};

&sdhc_1 {
	status = "okay";

	/* According to the stock dts from the QNAP gpl drop
	 * the emmc has a problem with the hs400 > hs200 speed switch.
	 * Therefore remove the mmc-hs400-1_8v property
	*/
	/delete-property/ mmc-hs400-1_8v;
	mmc-hs200-1_8v;
	mmc-ddr-1_8v;
	vqmmc-supply = <&l11>;
};

&blsp1_spi4 {
	status = "okay";

	pinctrl-0 = <&spi_3_pins>;
	pinctrl-names = "default";
	cs-select = <0>;

	st7789v@0 {
		compatible = "sitronix,st7789v";
		reg = <0>;
		spi-max-frequency = <2300000>;
                buswidth = <8>;
                rotate = <90>;
		dc-gpios = <&tlmm 42 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&tlmm 43 GPIO_ACTIVE_HIGH>;
		debug = <4>;
	};
};

&qusb_phy_0 {
	status = "okay";
};

&qusb_phy_1 {
	status = "okay";
};

&ssphy_0 {
	status = "okay";
};

&ssphy_1 {
	status = "okay";
};

&usb_0 {
	status = "okay";
};

&usb_1 {
	status = "okay";
};

&pcie_qmp0 {
	status = "okay";
};

&pcie0 {
	status = "okay";
	perst-gpios = <&tlmm 58 GPIO_ACTIVE_LOW>;
};

&pcie_qmp1 {
	status = "okay";
};

&pcie1 {
	status = "okay";
	perst-gpios = <&tlmm 61 GPIO_ACTIVE_LOW>;
};

&mdio {
	status = "okay";

	pinctrl-0 = <&mdio_pins>;
	pinctrl-names = "default";
	reset-gpios = <&tlmm 37 GPIO_ACTIVE_LOW>;

	ethernet-phy-package@0 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "qcom,qca8075-package";
		reg = <0>;

		qca8075_2: ethernet-phy@2 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <2>;
		};

		qca8075_3: ethernet-phy@3 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <3>;
		};

		qca8075_4: ethernet-phy@4 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <4>;
		};
	};
};

&switch {
	status = "okay";

	switch_lan_bmp = <(ESS_PORT4 | ESS_PORT5)>; /* lan port bitmap */
	switch_wan_bmp = <ESS_PORT3>; /* wan port bitmap */
	switch_mac_mode = <MAC_MODE_PSGMII>; /* mac mode for uniphy instance0*/

	qcom,port_phyinfo {
		port@3 {
			port_id = <3>;
			phy_address = <2>;
		};
		port@4 {
			port_id = <4>;
			phy_address = <3>;
		};
		port@5 {
			port_id = <5>;
			phy_address = <4>;
		};
	};
};

&edma {
	status = "okay";
};

&dp3 {
	status = "okay";
	phy-handle = <&qca8075_2>;
	label = "wan";
};

&dp4 {
	status = "okay";
	phy-handle = <&qca8075_3>;
	label = "lan1";
};

&dp5 {
	status = "okay";
	phy-handle = <&qca8075_4>;
	label = "lan2";
};

&wifi {
	status = "okay";

	qcom,ath11k-calibration-variant = "ALIYUN-XGLINK5G";
};
